<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用chatGPT绘制基因共表达网络图</title>
    <link href="/2023/08/26/20230826-chatGPTforNetwork/"/>
    <url>/2023/08/26/20230826-chatGPTforNetwork/</url>
    
    <content type="html"><![CDATA[<p>ChatGPT是一款强大的语言模型，不仅可以回答问题和进行对话，还可以辅助编写代码。通过提供清晰的问题或指令，可以从ChatGPT获得代码段、算法示例以及编程建议。它支持多种编程语言和领域，为编程任务提供快速而可靠的帮助，无论是解决问题、学习新技术还是优化代码结构，ChatGPT都能助你一臂之力。</p><p>我们以绘制基因共表达网络图为例展示chatGPT在写代码方面的作用。首先提出问题“绘制共表达网络图”，描述数据格式并指定用R语言实现这一过程，chatGPT给出的方法是使用<code>igraph</code>包根据随机数据生成无向图对象并绘图。</p><p><img src="/2023/08/26/20230826-chatGPTforNetwork/askQ.png" alt="向chatGPT提问" title="向chatGPT提问"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># 安装和加载所需的包</span><br>install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;igraph&quot;</span><span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>igraph<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 生成示例数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 设置随机种子以保持结果可复现</span><br>num_genes <span class="hljs-operator">&lt;-</span> 100<br>genes <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Gene&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>num_genes<span class="hljs-punctuation">)</span><br>edges <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>  gene1 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  gene2 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  weight <span class="hljs-operator">=</span> runif<span class="hljs-punctuation">(</span>num_genes<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 创建图对象</span><br>graph <span class="hljs-operator">&lt;-</span> graph.data.frame<span class="hljs-punctuation">(</span>edges<span class="hljs-punctuation">,</span> directed <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘制基因共表达网络图</span><br>plot<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">,</span><br>     layout <span class="hljs-operator">=</span> layout_with_fr<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment"># 使用Fruchterman-Reingold布局</span><br>     vertex.label <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span>                <span class="hljs-comment"># 不显示顶点标签</span><br>     edge.color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray&quot;</span><span class="hljs-punctuation">,</span><br>     edge.width <span class="hljs-operator">=</span> edges<span class="hljs-operator">$</span>weight <span class="hljs-operator">*</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span>    <span class="hljs-comment"># 根据权重设置边的宽度</span><br>     main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Gene Co-expression Network&quot;</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/08/26/20230826-chatGPTforNetwork/network1.png" alt="生成一个网络图" title="生成一个网络图"></p><p>这个图中的边的宽度根据权重大小变化，但是其变化程度并不明显，因此向chatGPT进一步提出增加边宽度变化程度。</p><p><img src="/2023/08/26/20230826-chatGPTforNetwork/askWidth.png" alt="要求修改边的宽度变化程度" title="要求修改边的宽度变化程度"></p><details><summary>点击展开代码块</summary><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># 安装和加载所需的包</span><br>install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;igraph&quot;</span><span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>igraph<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 生成示例数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 设置随机种子以保持结果可复现</span><br>num_genes <span class="hljs-operator">&lt;-</span> 100<br>genes <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Gene&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>num_genes<span class="hljs-punctuation">)</span><br>edges <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>  gene1 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  gene2 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  weight <span class="hljs-operator">=</span> runif<span class="hljs-punctuation">(</span>num_genes<span class="hljs-punctuation">,</span> <span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 调整权重范围</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 创建图对象</span><br>graph <span class="hljs-operator">&lt;-</span> graph.data.frame<span class="hljs-punctuation">(</span>edges<span class="hljs-punctuation">,</span> directed <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算边的宽度</span><br>max_weight <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>edges<span class="hljs-operator">$</span>weight<span class="hljs-punctuation">)</span><br>edge_widths <span class="hljs-operator">&lt;-</span> edges<span class="hljs-operator">$</span>weight <span class="hljs-operator">/</span> max_weight <span class="hljs-operator">*</span> <span class="hljs-number">5</span>  <span class="hljs-comment"># 进一步调整权重缩放系数</span><br><br><span class="hljs-comment"># 绘制基因共表达网络图</span><br>plot<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">,</span><br>     layout <span class="hljs-operator">=</span> layout_with_fr<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment"># 使用Fruchterman-Reingold布局</span><br>     vertex.label <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span>                <span class="hljs-comment"># 不显示顶点标签</span><br>     edge.color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray&quot;</span><span class="hljs-punctuation">,</span><br>     edge.width <span class="hljs-operator">=</span> edge_widths<span class="hljs-punctuation">,</span>         <span class="hljs-comment"># 使用计算后的边宽度</span><br>     main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Gene Co-expression Network&quot;</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure></details><p><img src="/2023/08/26/20230826-chatGPTforNetwork/changeWidth.png" alt="改变边变化程度" title="改变边变化程度"></p><p>在新的代码中由原来的<code>edges$weight * 3</code>变成了<code>edges$weight / max_weight * 5</code>，对权重的范围进行了调整，并计算了边的宽度，使得权重大的边显示得更加明显。进一步我想将权重最大的三个基因挑选出来，标注Gene ID，并用不同颜色突出表示。</p><p><img src="/2023/08/26/20230826-chatGPTforNetwork/askHighlight1.png" alt="要求突出表示高权重基因" title="要求突出表示高权重基因"></p><details><summary>点击展开代码块</summary><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># 安装和加载所需的包</span><br>install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;igraph&quot;</span><span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>igraph<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 生成示例数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 设置随机种子以保持结果可复现</span><br>num_genes <span class="hljs-operator">&lt;-</span> 100<br>genes <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Gene&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>num_genes<span class="hljs-punctuation">)</span><br>edges <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>  gene1 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  gene2 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  weight <span class="hljs-operator">=</span> runif<span class="hljs-punctuation">(</span>num_genes<span class="hljs-punctuation">,</span> <span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 创建图对象</span><br>graph <span class="hljs-operator">&lt;-</span> graph.data.frame<span class="hljs-punctuation">(</span>edges<span class="hljs-punctuation">,</span> directed <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 找出权重之和最高的三个基因</span><br>gene_weights <span class="hljs-operator">&lt;-</span> tapply<span class="hljs-punctuation">(</span>edges<span class="hljs-operator">$</span>weight<span class="hljs-punctuation">,</span> edges<span class="hljs-operator">$</span>gene1<span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br>top_genes <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>sort<span class="hljs-punctuation">(</span>gene_weights<span class="hljs-punctuation">,</span> decreasing <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算边的宽度</span><br>max_weight <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>edges<span class="hljs-operator">$</span>weight<span class="hljs-punctuation">)</span><br>edge_widths <span class="hljs-operator">&lt;-</span> edges<span class="hljs-operator">$</span>weight <span class="hljs-operator">/</span> max_weight <span class="hljs-operator">*</span> <span class="hljs-number">5</span><br><br><span class="hljs-comment"># 设置顶点的颜色</span><br>vertex_colors <span class="hljs-operator">&lt;-</span> ifelse<span class="hljs-punctuation">(</span>V<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>name <span class="hljs-operator">%in%</span> top_genes<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘制基因共表达网络图</span><br>plot<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">,</span><br>     layout <span class="hljs-operator">=</span> layout_with_fr<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment"># 使用Fruchterman-Reingold布局</span><br>     vertex.label <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span><br>     vertex.color <span class="hljs-operator">=</span> vertex_colors<span class="hljs-punctuation">,</span>     <span class="hljs-comment"># 使用顶点颜色向量</span><br>     edge.color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray&quot;</span><span class="hljs-punctuation">,</span><br>     edge.width <span class="hljs-operator">=</span> edge_widths<span class="hljs-punctuation">,</span><br>     main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Gene Co-expression Network&quot;</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure></details><p><img src="/2023/08/26/20230826-chatGPTforNetwork/highlight1.png" alt="突出表示高权重基因" title="突出表示高权重基因"></p><p>新的结果中使用<code>tapply</code>函数计算gene1列基因的weight之和随后排序选出前三个基因作为高权重基因。使用<code>vertex.color</code>参数，在图中将其用红色表示出来。但是<code>vertex.label</code>参数仍然未设置，我们要求的Gene ID并没有标注，因此我们将这一问题反馈给chatGPT。</p><p><img src="/2023/08/26/20230826-chatGPTforNetwork/askHighlight2.png" alt="要求标注高权重基因的Gene ID" title="要求标注高权重基因的Gene ID"></p><details><summary>点击展开代码块</summary><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># 安装和加载所需的包</span><br>install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;igraph&quot;</span><span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>igraph<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 生成示例数据</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 设置随机种子以保持结果可复现</span><br>num_genes <span class="hljs-operator">&lt;-</span> 100<br>genes <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Gene&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>num_genes<span class="hljs-punctuation">)</span><br>edges <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span><br>  gene1 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  gene2 <span class="hljs-operator">=</span> sample<span class="hljs-punctuation">(</span>genes<span class="hljs-punctuation">,</span> num_genes<span class="hljs-punctuation">,</span> replace <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  weight <span class="hljs-operator">=</span> runif<span class="hljs-punctuation">(</span>num_genes<span class="hljs-punctuation">,</span> <span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 创建图对象</span><br>graph <span class="hljs-operator">&lt;-</span> graph.data.frame<span class="hljs-punctuation">(</span>edges<span class="hljs-punctuation">,</span> directed <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 找出权重之和最高的三个基因</span><br>gene_weights <span class="hljs-operator">&lt;-</span> tapply<span class="hljs-punctuation">(</span>edges<span class="hljs-operator">$</span>weight<span class="hljs-punctuation">,</span> edges<span class="hljs-operator">$</span>gene1<span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br>top_genes <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>sort<span class="hljs-punctuation">(</span>gene_weights<span class="hljs-punctuation">,</span> decreasing <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算边的宽度</span><br>max_weight <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">max</span><span class="hljs-punctuation">(</span>edges<span class="hljs-operator">$</span>weight<span class="hljs-punctuation">)</span><br>edge_widths <span class="hljs-operator">&lt;-</span> edges<span class="hljs-operator">$</span>weight <span class="hljs-operator">/</span> max_weight <span class="hljs-operator">*</span> <span class="hljs-number">5</span><br><br><span class="hljs-comment"># 设置顶点的颜色和标签</span><br>vertex_colors <span class="hljs-operator">&lt;-</span> ifelse<span class="hljs-punctuation">(</span>V<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>name <span class="hljs-operator">%in%</span> top_genes<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">)</span><br>vertex_labels <span class="hljs-operator">&lt;-</span> ifelse<span class="hljs-punctuation">(</span>V<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>name <span class="hljs-operator">%in%</span> top_genes<span class="hljs-punctuation">,</span> V<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>name<span class="hljs-punctuation">,</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 绘制基因共表达网络图</span><br>plot<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">,</span><br>     layout <span class="hljs-operator">=</span> layout_with_fr<span class="hljs-punctuation">(</span>graph<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span>  <span class="hljs-comment"># 使用Fruchterman-Reingold布局</span><br>     vertex.label <span class="hljs-operator">=</span> vertex_labels<span class="hljs-punctuation">,</span>     <span class="hljs-comment"># 使用顶点标签向量</span><br>     vertex.color <span class="hljs-operator">=</span> vertex_colors<span class="hljs-punctuation">,</span><br>     edge.color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray&quot;</span><span class="hljs-punctuation">,</span><br>     edge.width <span class="hljs-operator">=</span> edge_widths<span class="hljs-punctuation">,</span><br>     main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Gene Co-expression Network&quot;</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure></details><p><img src="/2023/08/26/20230826-chatGPTforNetwork/highlight2.png" alt="进一步标注高权重基因的Gene ID" title="进一步标注高权重基因的Gene ID"></p><p>最终我们得到一个基因共表达网络图，其中重要基因使用不同颜色突出显示，并标注出Gene ID。我们向chatGPT提出要求，可以实现快速编写代码，通过对chatGPT提出新的要求可以进一步对结果进行修改。但是chatGPT有时不能给出完全符合预期的结果，需要我们对其进行引导，而且给出的方案也并不一定完全正确，上述代码中挑选高权重基因的方法没有考虑gene2列。因此我们需要向chatGPT提出清晰明确的要求并不断引导，从而正确实现我们的目的，提高工作效率。</p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>绘图</tag>
      
      <tag>chatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nat Commun. | 黄瓜graph-based pangenome与黄瓜农艺性状和驯化相关结构变异</title>
    <link href="/2023/08/15/20230815-cucumberGraphBasedPanGenome/"/>
    <url>/2023/08/15/20230815-cucumberGraphBasedPanGenome/</url>
    
    <content type="html"><![CDATA[<p>黄瓜(<em>Cucumis sativus</em> L.)是主要的蔬菜作物之一，也是植物性别决定和维管发育研究的模式植物。通过将自然群体重测序数据比对到单个基因组鉴定了黄瓜群体变异信息，以此研究了黄瓜的驯化历史和挖掘重要农艺性状相关基因。然而大片段结构变异（SV）的鉴定和研究仍然欠缺，需要进一步构建泛基因组增强SV的检测效果，进而促进黄瓜驯化和重要农艺性状相关SV研究。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/cucumber.png" alt="不同黄瓜的果实" title="不同黄瓜的果实"></p><h2 id="11个黄瓜品种的基因组组装"><a href="#11个黄瓜品种的基因组组装" class="headerlink" title="11个黄瓜品种的基因组组装"></a>11个黄瓜品种的基因组组装</h2><p>作者根据115个黄瓜品种的进化关系从中选取了11个代表性黄瓜品种，包括2个东亚品系（XTMC和Cu2）、三个欧洲品系（Cuc37、Gy14和9110gt）、一个西双版纳品系（Cuc80）和五个印度品系（Cuc64、W4、W8、Hx14和Hx117）。综合利用Pacbio测序数据、HiC数据、二代全基因组测序数据、10X Genomics数据以及遗传连锁图数据组装其参考基因组并对重复序列和蛋白质编码基因进行注释。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/assembly.png" alt="组装结果" title="组装结果"></p><h2 id="黄瓜核型进化"><a href="#黄瓜核型进化" class="headerlink" title="黄瓜核型进化"></a>黄瓜核型进化</h2><p>通过基因组间比对分析，在4和、5号和7号染色体上鉴定到7个染色体倒位变异（inversion）。这些倒位变异存在于部分野生中，结合进化分析确定了这些变异发生在野生种进化过程中。大片段倒位变异抑制重组的发生，因此鉴定黄瓜倒位图谱可以为野生黄瓜和栽培黄瓜选择亲本进行杂交构建分离群体提供指导意见。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/inversion.png" alt="黄瓜核型进化" title="黄瓜核型进化"></p><h2 id="基于蛋白编码基因构建泛基因组"><a href="#基于蛋白编码基因构建泛基因组" class="headerlink" title="基于蛋白编码基因构建泛基因组"></a>基于蛋白编码基因构建泛基因组</h2><p>将11个组装基因组和9930基因组的299,692个蛋白编码基因聚类得到26,822个非冗余的泛基因簇，包括18,651个核心（core）基因簇和8171个非核心（dispensable）基因簇。GO富集分析表明两者之间之间存在功能差异，核心基因簇更多富集在重要的生物学过程。核心基因簇和非核心基因簇相比CDS更长、表达量更高，而且更加保守。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/pangenome.png" alt="protein-coding gene-based的泛基因组" title="protein-coding gene-based的泛基因组"></p><h2 id="基因组间遗传变异和graph-based泛基因组构建"><a href="#基因组间遗传变异和graph-based泛基因组构建" class="headerlink" title="基因组间遗传变异和graph-based泛基因组构建"></a>基因组间遗传变异和graph-based泛基因组构建</h2><p>基于11个组装的基因组和9930基因组比对，作者综合鉴定了基因组间遗传变异，包括SNPs、InDels以及SVs。通过将SVs整合到9930线性基因组，作者构建了graph-based泛基因组。Graph-based泛基因组可以增加二代数据鉴定SVs基因型的准确性，作者以此对115个品种的黄瓜群体进行SVs基因型鉴定并对主枝雌花率、果棘/果瘤密度和分枝树进行SV-GWAS。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/GraphBasedPanGenome.png" alt="graph-based的泛基因组" title="graph-based的泛基因组"></p><h2 id="结构变异对黄瓜基因功能的影响"><a href="#结构变异对黄瓜基因功能的影响" class="headerlink" title="结构变异对黄瓜基因功能的影响"></a>结构变异对黄瓜基因功能的影响</h2><p>为探索结构变异对农艺性状的影响，作者筛选了2624个可能影响基因CDS的结构变异。进一步作者详细分析了国刺果瘤和花期相关基因的结构变异，鉴定可能影响基因功能的变异，分析不同地区黄瓜品种中的分布并推测其演化历程。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/SpineWartSV.png" alt="黄瓜果刺果瘤发育相关基因的等位变异" title="黄瓜果刺果瘤发育相关基因的等位变异"><br><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/FTSV.png" alt="*CsFT*基因的进化轨迹" title="*CsFT*基因的进化轨迹"></p><h2 id="与黄瓜驯化相关的结构变异"><a href="#与黄瓜驯化相关的结构变异" class="headerlink" title="与黄瓜驯化相关的结构变异"></a>与黄瓜驯化相关的结构变异</h2><p>作者鉴定了2578个位于受选择区域的结构变异和8651个在野生黄瓜和栽培黄瓜品种中基因频率显著变化的结构变异，其中1611个结构变异可能和临近基因表达量变化相关。经过人工驯化，栽培黄瓜的根生长速率高于野生祖先种的根生长速率。拟南芥<em>AT5G09530</em>（<em>PELPK1</em>）是根发育的正调控因子，<em>PELPK7.1</em>和<em>PELPK7.2</em>是拟南芥<em>PELPK1</em>的同源基因，通过比较其启动子和内含子上鉴定到的结构变异在不同地区黄瓜品种中的分布推测这两个基因可能收到驯化选择。表达量和表型分析表明，不同单倍型的基因表达量以及主根长和根重有显著差异。</p><p><img src="/2023/08/15/20230815-cucumberGraphBasedPanGenome/domesticationRelatedSV.png" alt="两个驯化相关结构变异可能影响黄瓜根发育" title="两个驯化相关结构变异可能影响黄瓜根发育"></p><hr><p><strong>原文链接</strong></p><p><a href="https://www.nature.com/articles/s41467-022-28362-0">Li H, Wang S, Chai S, et al. Graph-based pan-genome reveals structural and sequence variations related to agronomic traits and domestication in cucumber. Nat Commun. 2022;13(1):682. Published 2022 Feb 3. doi:10.1038/s41467-022-28362-0</a></p>]]></content>
    
    
    <categories>
      
      <category>文献解读</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基因组</tag>
      
      <tag>结构变异</tag>
      
      <tag>泛基因组</tag>
      
      <tag>黄瓜</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R绘图 | 如何改变circos图中不同track中sector间的比例</title>
    <link href="/2023/06/27/20230627-NewCircos/"/>
    <url>/2023/06/27/20230627-NewCircos/</url>
    
    <content type="html"><![CDATA[<h2 id="实际案例及问题"><a href="#实际案例及问题" class="headerlink" title="实际案例及问题"></a>实际案例及问题</h2><p>我们先看文章中的例子。在下图中最外两层分别表示了遗传连锁图和物理图（基因组），中间连线代表构图标记在遗传图和物理图上位置的对应关系。我们可以看到不同染色体间的长度比例和不同连锁图间的长度比例是相同的，但是这一点显然和实际情况不符。这幅图是由<a href="http://circos.ca/">circos</a>软件绘制，造成上述比例问题的原因可能是circos并不能改变不同track的比例，或者有改变比例的设置方法但作者并不知道。</p><p><img src="/2023/06/27/20230627-NewCircos/rawCircos.png" alt="Zhang et al., Industrial Crops &amp; Products, 2023" title="Zhang et al., Industrial Crops &amp; Products, 2023"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我们今天就尝试着用R语言的<code>ggplot2</code>来解决这一问题。基本思路是先用<code>geom_rect()</code>构建不同染色体和连锁群，然后使用<code>ggforce</code>扩展包的<code>geom_diagonal()</code>函数添加标记在连锁图和物理图间对应位置的连线，最后用<code>coord_polar()</code>将直角坐标系转换为极坐标系。</p><h3 id="构建染色体和连锁群"><a href="#构建染色体和连锁群" class="headerlink" title="构建染色体和连锁群"></a>构建染色体和连锁群</h3><p>每个染色体和连锁群长度不同，且都是从 0 开始，为了能在同一水平线上依次画出不同染色体或连锁群，我们需要把其起始位置 0 和终止位置加上该染色体或连锁群前面的长度总和，并且为了是不同染色体或连锁群不重合，还需要加上 n-1 （n为该染色体或连锁群排序位置）个间隔大小，同理标记在基因组或连锁图上的位置也需要相同处理。还有一个问题是物理图和遗传图总长以及单位并不相同，需要将长度信息和位置信息标准化，在此我们将所有$长度或位置 \div total Length \times 1000000$。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 加载扩展包</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggforce<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 读取染色体和连锁群长度信息</span><br>chrLen <span class="hljs-operator">&lt;-</span> read_tsv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">&quot;chrLen.txt&quot;</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Chr&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Len&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>lgLen <span class="hljs-operator">&lt;-</span> read_tsv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">&quot;lgLen.txt&quot;</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Lg&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;LgLen&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 计算连锁图和物理图总长，用于标准化位置或长度信息</span><br>totalLgLen <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>lgLen<span class="hljs-operator">$</span>LgLen<span class="hljs-punctuation">)</span><br>totalChrLen <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>chrLen<span class="hljs-operator">$</span>Len<span class="hljs-punctuation">)</span><br>chrLen <span class="hljs-operator">&lt;-</span> chrLen <span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>Len <span class="hljs-operator">=</span> Len<span class="hljs-operator">/</span>totalChrLen<span class="hljs-operator">*</span><span class="hljs-number">1000000</span><span class="hljs-punctuation">)</span><br>lgLen <span class="hljs-operator">&lt;-</span> lgLen <span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>LgLen <span class="hljs-operator">=</span> LgLen<span class="hljs-operator">/</span>totalLgLen<span class="hljs-operator">*</span><span class="hljs-number">1000000</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 读取标记在物理图和连锁图上的位置信息，并除以总长进行标准化</span><br>lgMap <span class="hljs-operator">&lt;-</span> read_tsv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">&quot;linkage_map.txt&quot;</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Marker&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Lg&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;LgPos&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>phyMap <span class="hljs-operator">&lt;-</span> read_tsv<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">&quot;physical_map.txt&quot;</span><span class="hljs-punctuation">,</span> col_names <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Marker&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Chr&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Pos&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>phyMap <span class="hljs-operator">&lt;-</span> phyMap <span class="hljs-operator">%&gt;%</span> filter<span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>str_detect<span class="hljs-punctuation">(</span>Chr<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;random&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br>lgMap <span class="hljs-operator">&lt;-</span> lgMap <span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>LgPos <span class="hljs-operator">=</span> LgPos<span class="hljs-operator">/</span>totalLgLen<span class="hljs-operator">*</span><span class="hljs-number">1000000</span><span class="hljs-punctuation">)</span><br>phyMap <span class="hljs-operator">&lt;-</span> phyMap <span class="hljs-operator">%&gt;%</span> mutate<span class="hljs-punctuation">(</span>Pos <span class="hljs-operator">=</span> Pos<span class="hljs-operator">/</span>totalChrLen<span class="hljs-operator">*</span><span class="hljs-number">1000000</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># addUp函数读取染色体或连锁群长度信息，并将&quot;df&quot;参数中的位置信息加上对应染色体或连锁群前面的总长，以及不同染色体或连锁群之间的分隔长度(&quot;band=0.01&quot;指分隔长度为总长的 1%)</span><br>source<span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-string">&quot;E:/mygit/SomeScript/addUp.R&quot;</span><span class="hljs-punctuation">)</span><br>lg_addUp <span class="hljs-operator">&lt;-</span> addUp<span class="hljs-punctuation">(</span>df <span class="hljs-operator">=</span> lgMap<span class="hljs-punctuation">,</span> len <span class="hljs-operator">=</span> lgLen<span class="hljs-punctuation">,</span> lenName <span class="hljs-operator">=</span> <span class="hljs-string">&quot;LgLen&quot;</span><span class="hljs-punctuation">,</span> group <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Lg&quot;</span><span class="hljs-punctuation">,</span> pos <span class="hljs-operator">=</span> <span class="hljs-string">&quot;LgPos&quot;</span><span class="hljs-punctuation">,</span> band <span class="hljs-operator">=</span> <span class="hljs-number">0.01</span><span class="hljs-punctuation">)</span><br>phy_addUp <span class="hljs-operator">&lt;-</span> addUp<span class="hljs-punctuation">(</span>df <span class="hljs-operator">=</span> phyMap<span class="hljs-punctuation">,</span> len <span class="hljs-operator">=</span> chrLen<span class="hljs-punctuation">,</span> lenName <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Len&quot;</span><span class="hljs-punctuation">,</span> group <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Chr&quot;</span><span class="hljs-punctuation">,</span> pos <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Pos&quot;</span><span class="hljs-punctuation">,</span> band <span class="hljs-operator">=</span> <span class="hljs-number">0.01</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 然后我们使用geom_rect()函数将染色体和连锁群用长条矩形表示出来，同时用红色和蓝色表示A亚基因组和C亚基因组</span><br>p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_rect<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> phy<span class="hljs-punctuation">,</span> mapping <span class="hljs-operator">=</span> aes<span class="hljs-punctuation">(</span>xmin <span class="hljs-operator">=</span> xmin<span class="hljs-punctuation">,</span> xmax <span class="hljs-operator">=</span> xmax<span class="hljs-punctuation">,</span> ymin <span class="hljs-operator">=</span> ymin<span class="hljs-punctuation">,</span> ymax <span class="hljs-operator">=</span> ymax<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;#CD5C5C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;#4169E1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_rect<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> lg<span class="hljs-punctuation">,</span> mapping <span class="hljs-operator">=</span> aes<span class="hljs-punctuation">(</span>xmin <span class="hljs-operator">=</span> xmin<span class="hljs-punctuation">,</span> xmax <span class="hljs-operator">=</span> xmax<span class="hljs-punctuation">,</span> ymin <span class="hljs-operator">=</span> ymin<span class="hljs-punctuation">,</span> ymax <span class="hljs-operator">=</span> ymax<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">9</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_y_continuous<span class="hljs-punctuation">(</span>limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_x_continuous<span class="hljs-punctuation">(</span>limits <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>chrLen<span class="hljs-operator">$</span>Len<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-number">0.010</span><span class="hljs-operator">*</span><span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">(</span>chrLen<span class="hljs-operator">$</span>Len<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">+</span>nrow<span class="hljs-punctuation">(</span>chrLen<span class="hljs-punctuation">)</span><span class="hljs-operator">*</span><span class="hljs-number">0.01</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> breaks <span class="hljs-operator">=</span> lg_addUp<span class="hljs-operator">$</span>breaks<span class="hljs-punctuation">,</span> labels <span class="hljs-operator">=</span> lg_addUp<span class="hljs-operator">$</span>labels<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  coord_polar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  cowplot<span class="hljs-operator">::</span>theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  theme<span class="hljs-punctuation">(</span>axis.line <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        axis.ticks <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        axis.text.y <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        axis.title <span class="hljs-operator">=</span> element_blank<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>p<br></code></pre></td></tr></table></figure><p><img src="/2023/06/27/20230627-NewCircos/rect.png" alt="用长条矩形表示染色体和连锁群" title="用长条矩形表示染色体和连锁群"></p><h3 id="添加曲线"><a href="#添加曲线" class="headerlink" title="添加曲线"></a>添加曲线</h3><p>上述已经画出染色体和连锁群，我们用``函数添加一条bezier曲线用于表示标记在基因组和连锁图上对应的位置。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> <br>  geom_diagonal<span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> linker<span class="hljs-punctuation">,</span> <br>                mapping <span class="hljs-operator">=</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> y<span class="hljs-punctuation">,</span> xend <span class="hljs-operator">=</span> xend<span class="hljs-punctuation">,</span> yend <span class="hljs-operator">=</span> yend<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                orientation <span class="hljs-operator">=</span> <span class="hljs-string">&quot;y&quot;</span><span class="hljs-punctuation">,</span> linewidth <span class="hljs-operator">=</span> <span class="hljs-number">0.2</span><span class="hljs-punctuation">,</span> color <span class="hljs-operator">=</span> <span class="hljs-string">&quot;gray&quot;</span><span class="hljs-punctuation">)</span><br>p<br></code></pre></td></tr></table></figure><p><img src="/2023/06/27/20230627-NewCircos/rect_with_link.png" alt="用bezier曲线连接表示标记在基因组和连锁图上的对应位置" title="用bezier曲线连接表示标记在基因组和连锁图上的对应位置"></p><h3 id="坐标系变换"><a href="#坐标系变换" class="headerlink" title="坐标系变换"></a>坐标系变换</h3><p>使用<code>coord_polar()</code>函数将直角坐标系变成极坐标系。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">p <span class="hljs-operator">&lt;-</span> p <span class="hljs-operator">+</span> coord_polar<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>p<br></code></pre></td></tr></table></figure><p><img src="/2023/06/27/20230627-NewCircos/circos.png" alt="新的circos图" title="新的circos图"></p><p>和文章中的circos图对比发现，我们纠正了不同连锁群间比例和不同染色体间比例的问题，使其按照各自的大小比例分布。但同时一个新的问题出现了，由于A亚基因组的在物理图中所占比例较低，在遗传图中所占比例略大，C亚基因组相反，也就是在物理图和遗传图中不同染色体和不同连锁群比例不同，导致了标记在物理图和遗传图间的位置偏差越来越大，表现在图中就是中间曲线被越拉越长。因此需要根据个人偏好选择两种不同形式的circos图。</p><p><strong>图片来源</strong><br><a href="https://doi.org/10.1016/j.indcrop.2023.117054">A stable quantitative trait locus on chromosome A10 improves the oil content of a backbone parent in Brassica napus L.</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>绘图</tag>
      
      <tag>circos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言 | shiny基础（一）：shiny用户界面（UI）</title>
    <link href="/2023/06/02/20230602-shinyBasics2UI/"/>
    <url>/2023/06/02/20230602-shinyBasics2UI/</url>
    
    <content type="html"><![CDATA[<p><a href="http://laowang2023.cn/2023/05/31/20230531-shinyBasics1/">书接上文</a>，我们已经了解shiny的主体结构，今天详细讲一讲用户界面（ui）部分。ui是shiny web应用展示给用户的界面，那如何控制ui的布局并向其中插入图片、表格、文字等各种元素呢？</p><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>shiny使用<code>fluidPage</code>函数创建ui布局。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">ui <span class="hljs-operator">&lt;-</span> fluidPage<span class="hljs-punctuation">(</span><br>  titlePanel<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;title panel&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br><br>  sidebarLayout<span class="hljs-punctuation">(</span><br>    sidebarPanel<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;sidebar panel&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    mainPanel<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;main panel&quot;</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/06/02/20230602-shinyBasics2UI/sidebar-layout1.png" alt="sidebar布局" title="sidebar布局"></p><p>在上面的例子中，首先使用<code>titlePanel</code>创建ui的标题栏，然后使用<code>sidebarLayout</code>将ui分为两个部分：侧边栏（<code>sidebarPanel</code>）和主体部分（<code>mainPanel</code>）。当然，除了<code>titlePanel</code>和<code>sidebarLayout</code>外，还有<a href="https://shiny.posit.co/articles/layout-guide.html">其函数可以创建跟高级的ui布局</a>。</p><h2 id="向ui插入各种元素"><a href="#向ui插入各种元素" class="headerlink" title="向ui插入各种元素"></a>向ui插入各种元素</h2><p>在上面的例子中我们把ui页面分为两个部分：sidebar panel和main panel，下一步就是向其中插入图片、表格或文字等内容，实现方法是把各种元素放在<code>*Panel</code>函数内，例如我们向<code>sidebarPanel</code>函数提供一个字符串参数“sidebar panel”，这一字符串将显示在sidebar panel内。</p><h3 id="HTML元素"><a href="#HTML元素" class="headerlink" title="HTML元素"></a>HTML元素</h3><p>HTML（HyperText Markup Language）即超文本标记语言，是一种用于创建网页的标准标记语言，HTML提供了一系列标签用来向网页内插入标题、文字、图片等。于此对应，在shiny中也有相应的函数向ui中插入各种元素。以下表格位shiny和HTML标签对应函数和功能，并举例说明使用方法。</p><table><thead><tr><th>shiny函数</th><th>对应HTML5标签</th><th>功能</th></tr></thead><tbody><tr><td><code>p</code></td><td><code>&lt;p&gt;</code></td><td>一个文本段落</td></tr><tr><td><code>h1</code></td><td><code>&lt;h1&gt;</code></td><td>一级标题</td></tr><tr><td><code>h2</code></td><td><code>&lt;h2&gt;</code></td><td>二级标题</td></tr><tr><td><code>h3</code></td><td><code>&lt;h3&gt;</code></td><td>三级标题</td></tr><tr><td><code>h4</code></td><td><code>&lt;h4&gt;</code></td><td>四级标题</td></tr><tr><td><code>h5</code></td><td><code>&lt;h5&gt;</code></td><td>五级标题</td></tr><tr><td><code>h6</code></td><td><code>&lt;h6&gt;</code></td><td>六级标题</td></tr><tr><td><code>a</code></td><td><code>&lt;a&gt;</code></td><td>插入超链接</td></tr><tr><td><code>br</code></td><td><code>&lt;br&gt;</code></td><td>换行符</td></tr><tr><td><code>div</code></td><td><code>&lt;div&gt;</code></td><td>定义文档中的分区或节</td></tr><tr><td><code>span</code></td><td><code>&lt;span&gt;</code></td><td>组合文档中的行内元素</td></tr><tr><td><code>pre</code></td><td><code>&lt;pre&gt;</code></td><td>定义预格式化的文本</td></tr><tr><td><code>code</code></td><td><code>&lt;code&gt;</code></td><td>格式化的代码块</td></tr><tr><td><code>img</code></td><td><code>&lt;img&gt;</code></td><td>插入一张图片</td></tr><tr><td><code>strong</code></td><td><code>&lt;strong&gt;</code></td><td>强调文本，黑体</td></tr><tr><td><code>em</code></td><td><code>&lt;em&gt;</code></td><td>强调文本，斜体</td></tr><tr><td><code>HTML</code></td><td></td><td>直接将字符串作为HTML代码传递</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>shiny<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Define UI ----</span><br>ui <span class="hljs-operator">&lt;-</span> fluidPage<span class="hljs-punctuation">(</span><br>  titlePanel<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;My Shiny App&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  sidebarLayout<span class="hljs-punctuation">(</span><br>    sidebarPanel<span class="hljs-punctuation">(</span><br>      h2<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Installation&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      p<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Shiny is available on CRAN, so you can install it in the usual way from your R console:&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      code<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;install.packages(&quot;shiny&quot;)&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      img<span class="hljs-punctuation">(</span>src <span class="hljs-operator">=</span> <span class="hljs-string">&quot;rstudio.png&quot;</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">70</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">200</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&quot;Shiny is a product of &quot;</span><span class="hljs-punctuation">,</span> <br>      span<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;RStudio&quot;</span><span class="hljs-punctuation">,</span> style <span class="hljs-operator">=</span> <span class="hljs-string">&quot;color:blue&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    mainPanel<span class="hljs-punctuation">(</span><br>      h1<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Introducing Shiny&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      p<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Shiny is a new package from RStudio that makes it &quot;</span><span class="hljs-punctuation">,</span> <br>        em<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;incredibly easy &quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>        <span class="hljs-string">&quot;to build interactive web applications with R.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      p<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;For an introduction and live examples, visit the &quot;</span><span class="hljs-punctuation">,</span><br>        a<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Shiny homepage.&quot;</span><span class="hljs-punctuation">,</span> <br>          href <span class="hljs-operator">=</span> <span class="hljs-string">&quot;http://shiny.rstudio.com&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      br<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      h2<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Features&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      p<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;- Build useful web applications with only a few lines of code—no JavaScript required.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      p<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;- Shiny applications are automatically &#x27;live&#x27; in the same way that &quot;</span><span class="hljs-punctuation">,</span> <br>        strong<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;spreadsheets&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-string">&quot; are live. Outputs change instantly as users modify inputs, without requiring a reload of the browser.&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Define server logic ----</span><br>server <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>input<span class="hljs-punctuation">,</span> output<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  <br><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-comment"># Run the app ----</span><br>shinyApp<span class="hljs-punctuation">(</span>ui <span class="hljs-operator">=</span> ui<span class="hljs-punctuation">,</span> server <span class="hljs-operator">=</span> server<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/06/02/20230602-shinyBasics2UI/my-shiny-app.png" alt="向shiny app中插入HTML元素" title="向shiny app中插入HTML元素"></p><p>在上述例子中在<code>*Panel</code>函数中使用<code>h2</code>、<code>p</code>、<code>em</code>、<code>img</code>等函数向ui中的对应panel插入二级标题标题、段落、斜体文本、图片等元素。</p><h3 id="添加控制部件（widgets）"><a href="#添加控制部件（widgets）" class="headerlink" title="添加控制部件（widgets）"></a>添加控制部件（widgets）</h3><p>shiny可以构建一个交互式的web应用，用户如何与之交互呢？shiny提供了一系列控制部件函数，用户使用这些部件可以向web应用发送信息，shiny以此信息实时动态的调整输出。下面表格中是常用的控制部件函数，并举例说明其实用方法。</p><table><thead><tr><th>function</th><th>widget</th></tr></thead><tbody><tr><td><code>actionButton</code></td><td>动作按钮</td></tr><tr><td><code>checkboxGroupInput</code></td><td>一组复选框</td></tr><tr><td><code>checkboxInput</code></td><td>单个复选框</td></tr><tr><td><code>dateInput</code></td><td>帮助选择日期的日历</td></tr><tr><td><code>dateRangeInput</code></td><td>一对用于选择日期范围的日历</td></tr><tr><td><code>fileInput</code></td><td>上传文件</td></tr><tr><td><code>helpText</code></td><td>可以添加到输入表单中的帮助文本</td></tr><tr><td><code>numericInput</code></td><td>数字输入框</td></tr><tr><td><code>radioButtons</code></td><td>一组单选按钮</td></tr><tr><td><code>selectInput</code></td><td>创建选择列表</td></tr><tr><td><code>sliderInput</code></td><td>滑动条</td></tr><tr><td><code>submitButton</code></td><td>提交按钮</td></tr><tr><td><code>textInput</code></td><td>文本输入框</td></tr></tbody></table><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs R">ui <span class="hljs-operator">&lt;-</span> fluidPage<span class="hljs-punctuation">(</span><br>  titlePanel<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;censusVis&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>  <br>  sidebarLayout<span class="hljs-punctuation">(</span><br>    sidebarPanel<span class="hljs-punctuation">(</span><br>      helpText<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Create demographic maps with </span><br><span class="hljs-string">               information from the 2010 US Census.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      <br>      selectInput<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;var&quot;</span><span class="hljs-punctuation">,</span> <br>                  label <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Choose a variable to display&quot;</span><span class="hljs-punctuation">,</span><br>                  choices <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Percent White&quot;</span><span class="hljs-punctuation">,</span> <br>                                 <span class="hljs-string">&quot;Percent Black&quot;</span><span class="hljs-punctuation">,</span><br>                                 <span class="hljs-string">&quot;Percent Hispanic&quot;</span><span class="hljs-punctuation">,</span> <br>                                 <span class="hljs-string">&quot;Percent Asian&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                  selected <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Percent White&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      <br>      sliderInput<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;range&quot;</span><span class="hljs-punctuation">,</span> <br>                  label <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Range of interest:&quot;</span><span class="hljs-punctuation">,</span><br>                  <span class="hljs-built_in">min</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">max</span> <span class="hljs-operator">=</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span> value <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">100</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>    <br>    mainPanel<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/06/02/20230602-shinyBasics2UI/censusviz.png" alt="控制部件" title="向ui中添加控制部件"></p><p>如上面例子所示，和插入HTML元素类似，控制部件同样是在<code>*Panel</code>函数中使用。控制部件的第一个参数为字符串，表明这个部件的<strong>名字</strong>，我们使用这个参数可以获得部件的值。第二个参数为部件的<strong>标签</strong>，可以在ui中看。其他的参数根据部件不同的功能而不同。</p><p><strong>参考资料</strong></p><ul><li><a href="https://shiny.posit.co/r/getstarted/shiny-basics/lesson2/">https://shiny.posit.co/r/getstarted/shiny-basics/lesson2/</a></li><li><a href="https://shiny.posit.co/r/getstarted/shiny-basics/lesson2/">https://shiny.posit.co/r/getstarted/shiny-basics/lesson2/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>shiny</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言 | shiny基础（一）：shiny入门</title>
    <link href="/2023/05/31/20230531-shinyBasics1/"/>
    <url>/2023/05/31/20230531-shinyBasics1/</url>
    
    <content type="html"><![CDATA[<p>shiny是一个创建交互式web应用程序的工具，有R和python版本，这里只涉及R版本。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>shiny是一个R语言扩展包，安装方便：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">install.packages<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;shiny&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="基本构成"><a href="#基本构成" class="headerlink" title="基本构成"></a>基本构成</h2><p>一个shiny程序包含在一个文件夹中（即shiny app的工作目录，例如：<code>newdir/</code>），其中代码部分在文件夹内的一个叫<code>app.R</code>的R脚本中（<code>newdir/app.R</code>）。<code>app.R</code>由三个部分构成：</p><ul><li>一个ui（user interface）对象</li><li>一个server函数</li><li>调用<code>shinyApp</code>函数</li></ul><p><code>ui</code>对象决定了web应用的布局、外观。<code>server</code>函数包含构建交互web应用的指令，例如生成图片、表格、文字等等。<code>shinyApp()</code>函数使用前面定义的<code>ui</code>和<code>server</code>创建web应用。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>shiny<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Define UI for app ----</span><br>ui <span class="hljs-operator">&lt;-</span> fluidPage<span class="hljs-punctuation">(</span><br>    <span class="hljs-comment"># some code</span><br><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Define server logic ----</span><br>server <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>input<span class="hljs-punctuation">,</span> output<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-comment"># some code</span><br><span class="hljs-punctuation">&#125;</span><br><br>shinyApp<span class="hljs-punctuation">(</span>ui <span class="hljs-operator">=</span> ui<span class="hljs-punctuation">,</span> server <span class="hljs-operator">=</span> server<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="如何运行shiny"><a href="#如何运行shiny" class="headerlink" title="如何运行shiny"></a>如何运行shiny</h2><h3 id="runApp函数"><a href="#runApp函数" class="headerlink" title="runApp函数"></a><code>runApp</code>函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>shiny<span class="hljs-punctuation">)</span><br>runApp<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;./my_app&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># `./my_app`是指app.R所在文件加的路径</span><br></code></pre></td></tr></table></figure><h3 id="Rstudio"><a href="#Rstudio" class="headerlink" title="Rstudio"></a>Rstudio</h3><p>当打开一个shiny app的<code>app.R</code>脚本时，Rstudio会自动识别到这是一个shiny脚本，并且会出现一个Run App按钮，点击此按钮可以运行app.R脚本，或者使用键盘的Control+Shift+Enter也可以实现运行脚本。</p><p><img src="/2023/05/31/20230531-shinyBasics1/run-app.png" alt="Rstudio中运行shiny app" title="Rstudio中运行shiny app"></p><p><strong>参考资料</strong></p><p><a href="https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/">https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>shiny</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nat Genet. | 玉米多组学整合网络图谱</title>
    <link href="/2023/05/22/20230522-maizeMultiOmicsNetwork/"/>
    <url>/2023/05/22/20230522-maizeMultiOmicsNetwork/</url>
    
    <content type="html"><![CDATA[<p>随着技术发展，生命科学进入大数据时代。中心法则的提出和发展表明从DNA序列到表型之间存在多个层次的调控过程。利用多组学数据构建整合网络为解析复杂性状的遗传调控提新的有效途径，结合机器学习挖掘生物大数据更为解析表型变异的分子调控网络提供便利。“A multi-omics integrative network map of maize”这篇文献以玉米为例构建多组学网络，挖掘重要农艺性状基因和调控网络。</p><h2 id="构建多组学网络"><a href="#构建多组学网络" class="headerlink" title="构建多组学网络"></a>构建多组学网络</h2><p>作者收集了不同组织、时期的多个样本，使用多种方法分别构建了基因组网络、共表达网络、共翻译网络以及蛋白质互作网络。其中基因组网络由ChIA-PET方法构建，共表达网络由31个组织时期的转录组数据构建，共翻译网络由21个组织时期的Ribo-seq数据构建，蛋白质互作网络使用RLL-Y2H构建。最终构建了一个包含407,721个功能元件（node）、多于2,800,000个边（edge）的综合网络。</p><p><img src="/2023/05/22/20230522-maizeMultiOmicsNetwork/MultiOmicsNetwork.png" alt="玉米多组学整合网络图谱" title="玉米多组学整合网络图谱"></p><h2 id="重复基因功能分化"><a href="#重复基因功能分化" class="headerlink" title="重复基因功能分化"></a>重复基因功能分化</h2><p>基因复制（基因组加倍WGD、串联重复tandem duplication、近端重复proximal duplication、转座重复transposition duplication、散在重复dispersed duplication）为基因功能进化提供契机。相较于非旁系同源基因，玉米重复基因，尤其是串联重复、近端重复以及基因组加倍重复基因更倾向于富集在相同的模块中，且具有更小的SD（节点间最短距离），表明其功能的保守性。进而根据基因间相似性和差异性将其分为I ~ V5类，其相似性逐渐降低而差异性增加，分别代表保守的（I）、亚功能化（II）、新功能化（III和IV）以及无功能化/特化（V）。重复基因更倾向于富集在代表功能保守的类别中，表明其在网络中的功能相似性。从共表达到共转录再到互作组网络重复基因在I ~ V类中的比例各不相同且存在重新分组的现象。最后根据重复基因起源的时间和I ~ V类中的分布比例发现，新生成的基因倾向于更保守。</p><p><img src="/2023/05/22/20230522-maizeMultiOmicsNetwork/duplicatedGenes.png" alt="不同组学层间重复基因的网络相似性和差异性" title="不同组学层间重复基因的网络相似性和差异"></p><h2 id="玉米亚基因组间非对称调控"><a href="#玉米亚基因组间非对称调控" class="headerlink" title="玉米亚基因组间非对称调控"></a>玉米亚基因组间非对称调控</h2><p>玉米是一种异源四倍体物种，两套亚基因组中maize1保留了更多的基因，且maize1中的基因表达量比maize2基因表达量更高。通过比较两个亚基因组中同源基因的连接度（Degree）发现，从共表达到共翻译再到互作组网络，其连接度差异愈发明显，到互作组网络中存在显著差异。滑窗统计方法表明maize1中由更多的优势bins。</p><p><img src="/2023/05/22/20230522-maizeMultiOmicsNetwork/subgenome.png" alt="亚基因组间不对称的网络分化" title="亚基因组间不对称的网络分化"></p><h2 id="重要基因的功能网络"><a href="#重要基因的功能网络" class="headerlink" title="重要基因的功能网络"></a>重要基因的功能网络</h2><p>处于同一个网络中的基因可能具有相似的功能。因此作者搜集功能已知的基因并找到其所处的子网络，通过对子网络的分析鉴定了调控相同性状的新的功能基因。</p><p><img src="/2023/05/22/20230522-maizeMultiOmicsNetwork/functionalGenes.png" alt="多组学网络重建复杂性状的调控网络" title="多组学网络重建复杂性状的调控网络"></p><h2 id="花期新基因的预测"><a href="#花期新基因的预测" class="headerlink" title="花期新基因的预测"></a>花期新基因的预测</h2><p>花期是重要的农艺性状。作者搜集已知的玉米花期基因和其他物种花期基因的同源基因，结合多组学整合网络使用机器学习的方法建立预测模型，进而预测玉米花期基因。最终预测了2,651个花期相关基因，以及鉴定到8个子网络和花期相关，这8个子网络分别代表了不同的调控途径。对其中20个基因进行基因敲除并考察突变体和野生型的表型，作者验证了其在花期表型中的功能。</p><p><img src="/2023/05/22/20230522-maizeMultiOmicsNetwork/predictFTgenes.png" alt="使用多组学网路预测花期基因" title="使用多组学网路预测花期基因"></p><p><strong>原文链接</strong></p><p><a href="https://doi.org/10.1038/s41588-022-01262-1">Han L, Zhong W, Qian J, et al. A multi-omics integrative network map of maize. Nat Genet. 2023;55(1):144-153. doi:10.1038/s41588-022-01262-1</a></p>]]></content>
    
    
    <categories>
      
      <category>文献解读</category>
      
    </categories>
    
    
    <tags>
      
      <tag>玉米</tag>
      
      <tag>多组学</tag>
      
      <tag>网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>五一假期苍岩山游记</title>
    <link href="/2023/05/01/20230501-CangyanMountain/"/>
    <url>/2023/05/01/20230501-CangyanMountain/</url>
    
    <content type="html"><![CDATA[<blockquote><p>苍岩山风景名胜区，位于河北省石家庄市西南井陉县境内，总面积63平方公里，素有”五岳奇秀揽一山，太行群峰唯苍岩”之誉。大自然的鬼斧神工使苍岩山中心地带形成了奇异的断崖绝壁及优越的生态环境。俯瞰苍岩，东西双峰对峙于前，南北一岭横亘于后，峰岭相向的侧面，壁立百丈悬崖，福庆寺就修建在谷中崖间。</p></p><footer><strong>井陉县人民政府网站</strong><cite><a href="http://www.sjzjx.gov.cn/col/1580710026147/2020/02/13/1581581315759.html">太行明珠--苍岩山</a></cite></footer></blockquote><p>从景区入口开始上山，山路陡峭。沿阶梯而上，一座悬空寺映入眼帘。</p><blockquote><p>桥凌架于百仞峭壁之间，仰视蓝天一线，俯首万太深渊。桥上建楼，云飞楼动，楼内建殿，殿内三尊大佛。真是”千丈虹桥望入微，天光云彩共楼飞”，不是仙境胜仙境，疑是天堂落尘埃。实为全世界罕见，是我国三大悬空寺之一，称为国宝。</p><footer><strong>井陉县人民政府网站</strong><cite><a href="http://www.sjzjx.gov.cn/col/1580710026147/2020/02/13/1581581315759.html">太行明珠--苍岩山</a></cite></footer></blockquote><p><img src="/2023/05/01/20230501-CangyanMountain/%E6%A1%A5%E6%A5%BC%E6%AE%BF.jpg" alt="福庆寺桥楼殿" title="福庆寺桥楼殿"></p><p>此处为电影《卧虎藏龙》结尾处取景地，玉娇龙从桥上一跃而下。</p><p><img src="/2023/05/01/20230501-CangyanMountain/%E5%8D%A7%E8%99%8E%E8%97%8F%E9%BE%99%E5%8F%96%E6%99%AF%E5%9C%B0.jpg" alt="卧虎藏龙取景地" title="卧虎藏龙取景地"></p><p><img src="/2023/05/01/20230501-CangyanMountain/%E5%8D%A7%E8%99%8E%E8%97%8F%E9%BE%99.jpg" alt="卧虎藏龙" title="卧虎藏龙"></p><p>自桥楼殿之后山路趋于平缓，但寺庙建筑、山路建于悬崖峭壁之上，十分险峻。</p><p><img src="/2023/05/01/20230501-CangyanMountain/%E8%8B%8D%E5%B2%A9%E5%B1%B1.jpg" alt="苍岩山" title="苍岩山"></p>]]></content>
    
    
    <categories>
      
      <category>记录生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>苍岩山</tag>
      
      <tag>旅游</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搞对象一周年纪念日</title>
    <link href="/2023/04/24/20230424-FirstYearAnniversary/"/>
    <url>/2023/04/24/20230424-FirstYearAnniversary/</url>
    
    <content type="html"><![CDATA[<p>快乐的时光总是飞快的，我们在一起一年了</p><p><img src="/2023/04/24/20230424-FirstYearAnniversary/cake.jpg" alt="一周年蛋糕" title="一周年蛋糕"></p>]]></content>
    
    
    <categories>
      
      <category>记录生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开心</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QTL-seq系列 | 如何计算置信区间</title>
    <link href="/2023/04/22/20230422-getQTLseqCI/"/>
    <url>/2023/04/22/20230422-getQTLseqCI/</url>
    
    <content type="html"><![CDATA[<p><a href="http://laowang2023.cn/2023/04/22/20230422-QTLseqMethod/">书接上文</a>，在计算出ΔSNP-index之后如何判断该位点是否存在QTL？这里通过随机模拟实验来确定ΔSNP-index的置信区间（H0: 没有QTL）。</p><p><img src="/2023/04/22/20230422-getQTLseqCI/method.png" alt="计算原理" title="计算原理"></p><h2 id="计算原理"><a href="#计算原理" class="headerlink" title="计算原理"></a>计算原理</h2><h3 id="模拟取样过程"><a href="#模拟取样过程" class="headerlink" title="模拟取样过程"></a>模拟取样过程</h3><p>双亲杂交（AA × BB）、自交后产生包含大量子代个体的分离群体（RIL或F<sub>2</sub>），随机抽取两组若干个体构成两个模拟bulk pool。对于构成bulk pool的每一个个体可能的基因型以及概率是固定的，RIL群体为AA:BB=0.5:0.5，而F<sub>2</sub>群体为AA:AB:BB=0.25:0.5:0.25，由此可以计算出给定子代数目的bulk pool中的等位基因频率P(A)和P(B)。</p><h3 id="模拟计算ΔSNP-index"><a href="#模拟计算ΔSNP-index" class="headerlink" title="模拟计算ΔSNP-index"></a>模拟计算ΔSNP-index</h3><p>前面计算出了bulk pool中的等位基因频率，那么在特定测序深度（N）下等位基因A出现的次数就相当于进行N次二项分布取样$n(A) = X \sim B(N,P(A))$，进而可以得到SNP index = n(A)/N，两个bulk pool的SNP index相减得到ΔSNP-index。</p><h3 id="计算零假设下的ΔSNP-index分布"><a href="#计算零假设下的ΔSNP-index分布" class="headerlink" title="计算零假设下的ΔSNP-index分布"></a>计算零假设下的ΔSNP-index分布</h3><p>将以上过程重复若干次（10000次）可以得到在零假设下的ΔSNP-index的分布，取其上分位数和下分位数可以得到对应置信区间（如95%置信区间取上0.025分位数和下0.025分位数）。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="模拟计算ΔSNP-index置信区间"><a href="#模拟计算ΔSNP-index置信区间" class="headerlink" title="模拟计算ΔSNP-index置信区间"></a>模拟计算ΔSNP-index置信区间</h3><p>这里使用R语言实现上述过程。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 加载R包</span><br>library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>cowplot<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 定义基本信息</span><br>popType <span class="hljs-operator">&lt;-</span> <span class="hljs-string">&quot;RIL&quot;</span>    <span class="hljs-comment"># 群体类型，RIL或F2</span><br>bulkSizeH <span class="hljs-operator">&lt;-</span> 30     <span class="hljs-comment"># 高值表型bulk pool个体数</span><br>bulkSizeL <span class="hljs-operator">&lt;-</span> 30     <span class="hljs-comment"># 低值表型bulk pool个体数</span><br>minDepth <span class="hljs-operator">&lt;-</span> 5       <span class="hljs-comment"># 最低覆盖深度</span><br>maxDepth <span class="hljs-operator">&lt;-</span> 150     <span class="hljs-comment"># 最高覆盖深度</span><br>repN <span class="hljs-operator">&lt;-</span> 10000       <span class="hljs-comment"># 模拟实验重复次数</span><br><span class="hljs-comment"># 定义数据框，每一行代表两个bulk pool的不同覆盖深度</span><br>dltIndex_CI <span class="hljs-operator">&lt;-</span> tibble<span class="hljs-punctuation">(</span>HB.DP <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span>minDepth<span class="hljs-operator">:</span>maxDepth<span class="hljs-punctuation">,</span> times <span class="hljs-operator">=</span> maxDepth<span class="hljs-operator">-</span>minDepth<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                      LB.DP <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span>minDepth<span class="hljs-operator">:</span>maxDepth<span class="hljs-punctuation">,</span> each <span class="hljs-operator">=</span> maxDepth<span class="hljs-operator">-</span>minDepth<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                      CI95upper <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> CI95lower <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> CI99upper <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> CI99lower <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 定义一个进度条，用于显示计算进度</span><br>width <span class="hljs-operator">&lt;-</span> options<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>width<br>pb <span class="hljs-operator">&lt;-</span> progress<span class="hljs-operator">::</span>progress_bar<span class="hljs-operator">$</span>new<span class="hljs-punctuation">(</span><br>  format <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Progress [:bar] :percent eta: :eta&#x27;</span><span class="hljs-punctuation">,</span><br>  total <span class="hljs-operator">=</span> nrow<span class="hljs-punctuation">(</span>dltIndex_CI<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> clear <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> width<br><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 对不同覆盖深度循环计算置信区间，即循环dltIndex_CI的每一行</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>nrow<span class="hljs-punctuation">(</span>dltIndex_CI<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  depthH <span class="hljs-operator">&lt;-</span> dltIndex_CI<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>  depthL <span class="hljs-operator">&lt;-</span> dltIndex_CI<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-comment"># 模拟计算high bulk pool和low bulk pool的等位基因频率，重复repN次</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>popType <span class="hljs-operator">==</span> <span class="hljs-string">&quot;RIL&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    PH <span class="hljs-operator">&lt;-</span> rbinom<span class="hljs-punctuation">(</span>repN<span class="hljs-punctuation">,</span> bulkSizeH<span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> bulkSizeH<br>    PL <span class="hljs-operator">&lt;-</span> rbinom<span class="hljs-punctuation">(</span>repN<span class="hljs-punctuation">,</span> bulkSizeL<span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> bulkSizeL<br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>popType <span class="hljs-operator">==</span> <span class="hljs-string">&quot;F2&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    PH <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>rmultinom<span class="hljs-punctuation">(</span>repN<span class="hljs-punctuation">,</span> bulkSizeH<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> bulkSizeH<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br>    PL <span class="hljs-operator">&lt;-</span> apply<span class="hljs-punctuation">(</span>rmultinom<span class="hljs-punctuation">(</span>repN<span class="hljs-punctuation">,</span> bulkSizeL<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">*</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> bulkSizeL<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">sum</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-comment"># 模拟计算两个bulk pool的ΔSNP-index，重复repN次</span><br>  indexH <span class="hljs-operator">&lt;-</span> rbinom<span class="hljs-punctuation">(</span>repN<span class="hljs-punctuation">,</span> depthH<span class="hljs-punctuation">,</span> PH<span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> depthH<br>  indexL <span class="hljs-operator">&lt;-</span> rbinom<span class="hljs-punctuation">(</span>repN<span class="hljs-punctuation">,</span> depthL<span class="hljs-punctuation">,</span> PL<span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span> depthL<br>  dltIndex <span class="hljs-operator">&lt;-</span> indexH <span class="hljs-operator">-</span> indexL<br>  <span class="hljs-comment"># 取上分位数和下分位数作为置信区间</span><br>  dltIndex_CI<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;CI95upper&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CI95lower&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CI99upper&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CI99lower&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> t<span class="hljs-punctuation">(</span><br>    <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>quantile<span class="hljs-punctuation">(</span>dltIndex<span class="hljs-punctuation">,</span> <span class="hljs-number">0.975</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> quantile<span class="hljs-punctuation">(</span>dltIndex<span class="hljs-punctuation">,</span> <span class="hljs-number">0.025</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>      quantile<span class="hljs-punctuation">(</span>dltIndex<span class="hljs-punctuation">,</span> <span class="hljs-number">0.995</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> quantile<span class="hljs-punctuation">(</span>dltIndex<span class="hljs-punctuation">,</span> <span class="hljs-number">0.005</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br>  <span class="hljs-comment"># 打印进度条</span><br>  pb<span class="hljs-operator">$</span>tick<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><span class="hljs-comment"># 保存结果，导出指定群体类型、bulk pool大小下不同覆盖深度的置信区间</span><br>save<span class="hljs-punctuation">(</span>dltIndex_CI<span class="hljs-punctuation">,</span> <br>     file <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;QTLseqCI&quot;</span><span class="hljs-punctuation">,</span> <br>                  paste<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indH&quot;</span><span class="hljs-punctuation">,</span> bulkSizeH<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                        paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indL&quot;</span><span class="hljs-punctuation">,</span> bulkSizeL<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                        popType<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Depth&quot;</span><span class="hljs-punctuation">,</span> minDepth<span class="hljs-punctuation">,</span> maxDepth<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                  paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Rep&quot;</span><span class="hljs-punctuation">,</span> repN<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                  <span class="hljs-string">&quot;RData&quot;</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="ΔSNP-index置信区间可视化"><a href="#ΔSNP-index置信区间可视化" class="headerlink" title="ΔSNP-index置信区间可视化"></a>ΔSNP-index置信区间可视化</h3><p>由此我们得到了特定群体类型、特定样本量大小下，不同测序深度位点的ΔSNP-index的95%和99%的置信区间，把结果导出保存为RData文件，方便下次使用而不用重复计算。ΔSNP-index的置信区间和覆盖深度的关系是怎样的呢？我们通过将上面结果可视化，将横坐标、纵坐标分别表示为high bulk pool、low bulk pool的位点覆盖深度，将ΔSNP-index的置信区间上限和下限值表示为不同颜色。由下面绘图结果可以看出，当提高位点覆盖深度时，ΔSNP-index的置信区间范围将会缩小，相反置信区间范围会增大。按照同样的思路我们也可以探究ΔSNP-index置信区间和群体类型、每个pool取样多少的关系。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 将置信区间和覆盖深度的关系可视化</span><br>df <span class="hljs-operator">&lt;-</span> gather<span class="hljs-punctuation">(</span>dltIndex_CI<span class="hljs-punctuation">,</span> type<span class="hljs-punctuation">,</span> CI<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>HB.DP<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>LB.DP<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span> <br>  mutate<span class="hljs-punctuation">(</span>level <span class="hljs-operator">=</span> if_else<span class="hljs-punctuation">(</span>str_detect<span class="hljs-punctuation">(</span>type<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;95&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;95 CI&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;99 CI&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>         direction <span class="hljs-operator">=</span> if_else<span class="hljs-punctuation">(</span>str_detect<span class="hljs-punctuation">(</span>type<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;upper&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Upper CI&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Lower CI&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>df<span class="hljs-operator">$</span>direction <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>direction<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Upper CI&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Lower CI&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>P_CI <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> HB.DP<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> LB.DP<span class="hljs-punctuation">,</span> fill <span class="hljs-operator">=</span> CI<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  geom_tile<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>  scale_x_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_y_continuous<span class="hljs-punctuation">(</span>expand <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  scale_fill_distiller<span class="hljs-punctuation">(</span>palette <span class="hljs-operator">=</span> <span class="hljs-string">&quot;RdBu&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  labs<span class="hljs-punctuation">(</span>title <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;CI&quot;</span><span class="hljs-punctuation">,</span> <br>                     paste<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indH&quot;</span><span class="hljs-punctuation">,</span> bulkSizeH<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                           paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indL&quot;</span><span class="hljs-punctuation">,</span> bulkSizeL<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                           popType<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                     paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Depth&quot;</span><span class="hljs-punctuation">,</span> minDepth<span class="hljs-punctuation">,</span> maxDepth<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                     paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Rep&quot;</span><span class="hljs-punctuation">,</span> repN<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>       fill <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  facet_grid<span class="hljs-punctuation">(</span>direction <span class="hljs-operator">~</span> level<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>  theme<span class="hljs-punctuation">(</span>strip.background <span class="hljs-operator">=</span> element_rect<span class="hljs-punctuation">(</span>fill <span class="hljs-operator">=</span> <span class="hljs-string">&quot;#90EE90&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>P_CI<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;QTLseqCI&quot;</span><span class="hljs-punctuation">,</span> <br>                              paste<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indH&quot;</span><span class="hljs-punctuation">,</span> bulkSizeH<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                                    paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indL&quot;</span><span class="hljs-punctuation">,</span> bulkSizeL<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                                    popType<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                              paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Depth&quot;</span><span class="hljs-punctuation">,</span> minDepth<span class="hljs-punctuation">,</span> maxDepth<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                              paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Rep&quot;</span><span class="hljs-punctuation">,</span> repN<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                              <span class="hljs-string">&quot;pdf&quot;</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">6.5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>P_CI<span class="hljs-punctuation">,</span> filename <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;QTLseqCI&quot;</span><span class="hljs-punctuation">,</span> <br>                              paste<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indH&quot;</span><span class="hljs-punctuation">,</span> bulkSizeH<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                                    paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;indL&quot;</span><span class="hljs-punctuation">,</span> bulkSizeL<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                                    popType<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                              paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Depth&quot;</span><span class="hljs-punctuation">,</span> minDepth<span class="hljs-punctuation">,</span> maxDepth<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>                              paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Rep&quot;</span><span class="hljs-punctuation">,</span> repN<span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;_&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>                              <span class="hljs-string">&quot;png&quot;</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>       width <span class="hljs-operator">=</span> <span class="hljs-number">6.5</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-punctuation">,</span> units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;in&quot;</span><span class="hljs-punctuation">,</span> dpi <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/04/22/20230422-getQTLseqCI/QTLseqCI.png" alt="置信区间和覆盖深度的关系" title="置信区间和覆盖深度的关系"></p><p><strong>参考文献</strong></p><p><a href="https://onlinelibrary.wiley.com/doi/10.1111/tpj.12105">Takagi H, Abe A, Yoshida K, et al. QTL-seq: rapid mapping of quantitative trait loci in rice by whole genome resequencing of DNA from two bulked populations. Plant J. 2013;74(1):174-183. doi:10.1111/tpj.12105</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>QTL-seq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>QTL-seq系列 | QTL-seq原理</title>
    <link href="/2023/04/22/20230422-QTLseqMethod/"/>
    <url>/2023/04/22/20230422-QTLseqMethod/</url>
    
    <content type="html"><![CDATA[<p>QTL-seq是一种将Bulked‐segregant analysis (BSA)和高通量测序相结合，快速定位质量性状或数量性状主效QTL的方法。</p><p>BSA方法最早使用RLFP或其他分子标记，分别在番茄中鉴定到果实脱落和成熟相关的基因组片段和标记，在生菜中鉴定到和抗霜霉病基因连锁的分子标记。</p><p><img src="/2023/04/22/20230422-QTLseqMethod/BSASchematicDiagram1.png" alt="BSA原理1" title="BSA原理1"></p><p><img src="/2023/04/22/20230422-QTLseqMethod/BSASchematicDiagram2.png" alt="BSA原理2" title="BSA原理2"></p><p>选取目标性状有差异的双亲构建的分离群体（RIL或F<sub>2</sub>），在分离群体中选取极端表型个体提取DNA并等量混合构建两个极端表型bulk pool，对混合DNA进行高通量测序（NGS）。同时应对至少其中一个亲本进行测序或其中一个亲本有参考基因组序列。随后进行变异分析，筛选出双亲间具有多态性的SNP位点（AA × BB）。分别计算两个bulk pool中每个SNP位点上某一亲本基因型read覆盖深度占该位点总read深度的比值，即SNP-index，两个bulk pool的SNP-index相减得到ΔSNP-index，为了减少测序和变异分析中出现的假阳性SNP位点的影响，采用滑窗统计的方法对ΔSNP-index进行平滑处理。将ΔSNP-index按照基因组位置画图，在基因组所有区域中，目标基因及其连锁的区域由于根据表型受到相反的选择在两个bulk pool中表现出不同的趋势，因此ΔSNP index会显著偏离0附近；另一方面，于目标形状无关的区域则两个bulk pool则表现为相似的变化趋势，因此ΔSNP index会在0附近波动。</p><p><img src="/2023/04/22/20230422-QTLseqMethod/QTLseqSchematicDiagram.png" alt="QTL-seq原理" title="QTL-seq原理"></p><p><strong>参考文献</strong></p><ol><li><a href="https://doi.org/10.1073/pnas.88.21.9828">Michelmore RW, Paran I, Kesseli RV. Identification of markers linked to disease-resistance genes by bulked segregant analysis: a rapid method to detect markers in specific genomic regions by using segregating populations. Proc Natl Acad Sci U S A. 1991;88(21):9828-9832. doi:10.1073/pnas.88.21.9828</a></li><li><a href="https://doi:10.1093/nar/19.23.6553">Giovannoni JJ, Wing RA, Ganal MW, Tanksley SD. Isolation of molecular markers from specific chromosomal intervals using DNA pools from existing mapping populations. Nucleic Acids Res. 1991;19(23):6553-6558. doi:10.1093/nar/19.23.6553</a></li><li><a href="https://doi:10.1111/tpj.12105">Takagi H, Abe A, Yoshida K, et al. QTL-seq: rapid mapping of quantitative trait loci in rice by whole genome resequencing of DNA from two bulked populations. Plant J. 2013;74(1):174-183. doi:10.1111/tpj.12105</a></li></ol><p><strong>完整代码</strong></p><p><a href="https://github.com/laowang1992/QTLseq_workflow">我的GitHub</a></p>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>QTL-seq</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nat Genet. | 一个优良抗旱玉米种质的基因组组装与遗传剖析</title>
    <link href="/2023/04/20/20230420-DroughtResistantMaizeGermplasm/"/>
    <url>/2023/04/20/20230420-DroughtResistantMaizeGermplasm/</url>
    
    <content type="html"><![CDATA[<p>玉米（<em>Zea mays</em>）是重要的粮食作物和饲料作物，同时也是重要的工业原料，并且在世界范围内广泛种植。干旱胁迫会导致作物严重减产，挖掘抗旱种质资源，选育高产抗旱品种可以缓解这一问题。作者在自然群体中筛选出一个具有抗旱特性的玉米种质资源（CIMBL55）。相较于B73和Mo17，CIMBL55具有较高的苗期存活率以及干旱条件下较低的产量损失。</p><p><img src="/2023/04/20/20230420-DroughtResistantMaizeGermplasm/phenotype.png" alt="CIMBL55具有显著抗旱性" title="CIMBL55具有显著抗旱性"></p><h2 id="基因组组装和共线性分析"><a href="#基因组组装和共线性分析" class="headerlink" title="基因组组装和共线性分析"></a>基因组组装和共线性分析</h2><p>作者结合PacBio三代长读长测序、BioNano光学图谱以及Hi-C测序技术对CIMBL55进行基因组测序组装。通过BUSCO分析以及9个CIMBL55 BAC克隆序列比对，作者验证了其基因组的质量可靠。通过CIMBL55与B73基因组间共线性分析，作者讲CIMBL55基因分成同源染色体共线性基因、非同源染色体重复基因、contigs上的共线性基因、不在共线性block中的直系同源基因和没有直系同源蛋白序列的基因5类。其中属于class 1-3的基因（Synteny）表达量显著高于class 4-5的基因（Noynteny）表达量。</p><p><img src="/2023/04/20/20230420-DroughtResistantMaizeGermplasm/genome_and_synteny.png" alt="基因组组装及共线性分析" title="基因组组装及共线性分析"></p><h2 id="SV鉴定"><a href="#SV鉴定" class="headerlink" title="SV鉴定"></a>SV鉴定</h2><p>作者将B73、Mo17和CIMBL55进行比对并鉴定了841,911个SV（&gt;20 bp），在玉米自然群体中鉴定了其中544,853个SVs的基因型。先前在自然群体中利用SNP鉴定的108个抗旱基因中有79个基因的优良等位基因（superior alleles）富集在CIMBL55中。进一步SV基因型进行关联分析，鉴定到69个基因包含和抗旱表型显著关联的SV，其中65个基因的优良单倍型（SNP和SV）富集在CIMBL55中。<em>ZmABF4</em>编码bZIP转录因子，可以调控ABA和干旱诱导的基因表达，在<em>ZmABF4</em>的第二个内含子上鉴定到一个SNP和一个SV，这两个变异和基因表达量、抗旱性显著关联。在自然群体中带有<em>ZmABF4<sup>CIMBL55</sup><em>单倍型的个体具有更高的</em>ZmABF4</em>表达量和抗旱性，而且<em>ZmABF4<sup>B73</sup><em>超表达植株和野生型相比表现出更高的抗旱性，表明</em>ZmABF4</em>可以正调控玉米抗旱性。</p><p><img src="/2023/04/20/20230420-DroughtResistantMaizeGermplasm/SV.PNG" alt="SV" title="SV"></p><h2 id="表观基因组变异影响玉米抗旱"><a href="#表观基因组变异影响玉米抗旱" class="headerlink" title="表观基因组变异影响玉米抗旱"></a>表观基因组变异影响玉米抗旱</h2><p>根据CIMBL55基因组插入片段（包括0.5-kb-flanking regions）的mCG、mCHG和mCHH甲基化水平使用层次聚类将其分为5类，其中第四类插入片段和flanking regions相比具有更高的甲基化水平，这类插入片段富集了大量DNA-TEs且距离转录起始位点较近。一些NAC-domain-containing transcription factor家族成员对失水胁迫抗性有积极作用。和<em>ZmNAC075<sup>CIMBL55</sup><em>相比</em>ZmNAC075<sup>B73</sup><em>上游有两个插入片段，这两个片段被超甲基化可能导致</em>ZmNAC075</em>表达量降低进而导致玉米抗旱性降低。</p><p><img src="/2023/04/20/20230420-DroughtResistantMaizeGermplasm/epigenomic_variations.png" alt="表观基因组变异影响玉米抗旱性" title="表观基因组变异影响玉米抗旱性"></p><h2 id="ZmRtn16提高玉米抗旱性"><a href="#ZmRtn16提高玉米抗旱性" class="headerlink" title="ZmRtn16提高玉米抗旱性"></a>ZmRtn16提高玉米抗旱性</h2><p>通过比较基因组分析鉴定到<em>ZmRtn16<sup>CIMBL55</sup><em>的3′-UTR区域存在一个28 bp缺失片段，带有这一缺失片段的玉米种质具有更高的抗旱性且</em>ZmRtn16</em>表达量更高，同时这一缺失片段可以增强<em>ZmRtn16</em>转录本的稳定性。<em>ZmRtn16</em>超表达株系、<em>crispr</em>敲除株系和野生型对照株系比较分析表明，<em>ZmRtn16</em>可以降低干旱条件下的玉米叶片气孔开度和降低失水率，从而减少干旱条件下的产量损失和增强抗旱性。进一步实验表明，<em>ZmRtn16</em>可以和ZmVHA-A以及ZmVHA-E3互作，促进ZmVHA-A和ZmVHA-E3定位到液泡膜上并增强V-H<sup>+</sup>-ATPase活性。</p><p><img src="/2023/04/20/20230420-DroughtResistantMaizeGermplasm/ZmRtn16.png" alt="ZmRtn16提高玉米抗旱性" title="ZmRtn16提高玉米抗旱性"></p><hr><p><strong>原文链接</strong></p><p><a href="https://www.nature.com/articles/s41588-023-01297-y">Tian T, Wang S, Yang S, et al. Genome assembly and genetic dissection of a prominent drought-resistant maize germplasm. Nat Genet. 2023;55(3):496-506. doi:10.1038/s41588-023-01297-y</a></p>]]></content>
    
    
    <categories>
      
      <category>文献解读</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基因组</tag>
      
      <tag>抗旱</tag>
      
      <tag>玉米</tag>
      
      <tag>结构变异</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R绘图 | 群体表型分布和相关关系</title>
    <link href="/2023/03/22/20230322-pheCorDist/"/>
    <url>/2023/03/22/20230322-pheCorDist/</url>
    
    <content type="html"><![CDATA[<p>考察一个群体的多个表型或者一个表型的多个重复，我们想展示其分布和他们之间的相关关系可以使用柱状图和散点图（如下图所示）。<br><img src="/2023/03/22/20230322-pheCorDist/pheCorDist.png" alt="不同重复的表型分布和相关性" title="不同重复的表型分布和相关性"><br>这幅图主要有两部分组成，一个是对角线上的柱状图，使用柱状图展示了每一个表型重复的分布；另一个就是对角线下面的散点图，用散点图展示两两之间的相关关系，并且用不同颜色表示点的密度，在上面标注其相关性。下面我们将使用R语言完成这幅图。</p><p>对于这幅图我们可以先分别绘制其中每一个部分，然后使用图片组合、拼接函数进行整合：</p><h2 id="分图绘制"><a href="#分图绘制" class="headerlink" title="分图绘制"></a>分图绘制</h2><p>首先导入数据，数据格式如下，每一行代表一个样本，每一列代表一个重复：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">data <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;./data.txt&quot;</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;\t&quot;</span><span class="hljs-punctuation">)</span><br>head<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br><span class="hljs-comment">#&gt;    pheno16rep1 pheno16rep2 pheno17 pheno18rep1 pheno18rep2</span><br><span class="hljs-comment">#&gt; s1        28.4        24.9   27.74      27.725    29.30000</span><br><span class="hljs-comment">#&gt; s2        26.6        25.3      NA          NA          NA</span><br><span class="hljs-comment">#&gt; s3        27.8        27.0   24.66          NA    27.97500</span><br><span class="hljs-comment">#&gt; s4        25.5        26.9   22.68      29.275    25.95000</span><br><span class="hljs-comment">#&gt; s5        26.5        28.7   24.76      31.975    27.52000</span><br><span class="hljs-comment">#&gt; s6        28.9        27.5   23.20      28.500    32.03333</span><br></code></pre></td></tr></table></figure><p>使用<code>ggplot2</code>扩展包绘制每一个分图。柱状图使用<code>geom_histogram()</code>绘制，散点图使用<code>ggpointdensity</code>包的<code>geom_pointdensity()</code>函数绘制，使用<code>cor()</code>函数计算两个重复之间的相关系数，并将其放在图片标题位置，并使用<code>ggtext</code>包的<code>element_markdown()</code>函数设置标题的主题，同时使用<code>cowplot</code>包的<code>theme_half_open()</code>函数设置整体主题。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggpointdensity<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>cowplot<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtext<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 柱状图</span><br>p1 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> pheno16rep1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>        geom_histogram<span class="hljs-punctuation">(</span>binwidth <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> title <span class="hljs-operator">=</span> cn<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme<span class="hljs-punctuation">(</span>plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 散点密度图</span><br>p2 <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> pheno16rep2<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> pheno16rep1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        geom_pointdensity<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        scale_color_continuous<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;viridis&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span>                <span class="hljs-comment"># 设置点密度颜色梯度</span><br>        labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> title <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;*R*: &quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>cor<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>col1<span class="hljs-punctuation">,</span> df<span class="hljs-operator">$</span>col2<span class="hljs-punctuation">,</span> use <span class="hljs-operator">=</span> <span class="hljs-string">&quot;na.or.complete&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>        theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">&quot;NA&quot;</span><span class="hljs-punctuation">,</span> <br>           plot.title <span class="hljs-operator">=</span> element_markdown<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                           face <span class="hljs-operator">=</span> <span class="hljs-string">&quot;plain&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/03/22/20230322-pheCorDist/single.png" alt="柱状图和散点图" title="柱状图和散点图"></p><h2 id="组合图片"><a href="#组合图片" class="headerlink" title="组合图片"></a>组合图片</h2><p>使用customLayout包进行图片组合，这个包可以对base绘图和ggplot2绘图进行整合，而且比较灵活。首先需要lay_new()函数创建一个拼接画布，然后使用lay_grid()函数组合各个图片。因为总共有5个重复，因此需要一个5×5的画图，如下图所示，各个分图从左上角开始往下排列走”之“字形排列。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">lay <span class="hljs-operator">&lt;-</span> lay_new<span class="hljs-punctuation">(</span>mat <span class="hljs-operator">=</span> matrix<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">25</span><span class="hljs-punctuation">,</span> nrow <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> widths <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> heights <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>lay_show<span class="hljs-punctuation">(</span>lay<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/2023/03/22/20230322-pheCorDist/layout.png" alt="布局" title="布局"><br>现在出现了一个问题，我们并没有在对角线上方安排图片，而lay_new()产生的是一个矩形排列画布，因此我们需要在右上角填充空白图片，并将空白图和柱状图、散点密度图整合。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_nothing<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>lay_grid<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>p1<span class="hljs-punctuation">,</span> p2<span class="hljs-punctuation">,</span> p3<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> lay<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="整理以上过程"><a href="#整理以上过程" class="headerlink" title="整理以上过程"></a>整理以上过程</h2><p>在一个5×5的组合中我们总共需要绘制25个分图，其中有多次重复的过程，并且最终图片是矩形有规律分布，因此为了减少代码长度我们可以使用循环来处理每个分图。根据lay_new()的组合形式可以设置两层循环分别处理行和列，并且因为组合图是从左上角开始向下排布，因此外层循环用来处理行，内层分布处理列。最后一点就是可以把这一系列代码写成一个function，方便以后使用。</p><p>最终代码如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>tidyverse<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggpointdensity<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>cowplot<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>ggtext<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>customLayout<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## 定义pheCorDist函数</span><br>pheCorDist <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> binwidth <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> bins <span class="hljs-operator">=</span> <span class="hljs-number">30</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">#</span><br>  n <span class="hljs-operator">&lt;-</span> ncol<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br>  cn <span class="hljs-operator">&lt;-</span> colnames<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br>  Pall <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>  index <span class="hljs-operator">&lt;-</span> 1<br>  <span class="hljs-comment">#</span><br>  <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>j <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>n<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span>n<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      df <span class="hljs-operator">&lt;-</span> data<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>i<span class="hljs-punctuation">,</span>j<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>      colnames<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;col1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;col2&quot;</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>i <span class="hljs-operator">==</span> j<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> col1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <br>          geom_histogram<span class="hljs-punctuation">(</span>binwidth <span class="hljs-operator">=</span> binwidth<span class="hljs-punctuation">,</span> bins <span class="hljs-operator">=</span> bins<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> title <span class="hljs-operator">=</span> cn<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          theme<span class="hljs-punctuation">(</span>plot.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>i <span class="hljs-operator">&gt;</span> j<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> aes<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> col2<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> col1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          geom_pointdensity<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          scale_color_continuous<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;viridis&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          labs<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> title <span class="hljs-operator">=</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;*R*: &quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">round</span><span class="hljs-punctuation">(</span>cor<span class="hljs-punctuation">(</span>df<span class="hljs-operator">$</span>col1<span class="hljs-punctuation">,</span> df<span class="hljs-operator">$</span>col2<span class="hljs-punctuation">,</span> use <span class="hljs-operator">=</span> <span class="hljs-string">&quot;na.or.complete&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          theme_half_open<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>          theme<span class="hljs-punctuation">(</span>legend.position <span class="hljs-operator">=</span> <span class="hljs-string">&quot;NA&quot;</span><span class="hljs-punctuation">,</span> <br>                plot.title <span class="hljs-operator">=</span> element_markdown<span class="hljs-punctuation">(</span>hjust <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">,</span><br>                                              face <span class="hljs-operator">=</span> <span class="hljs-string">&quot;plain&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span><span class="hljs-punctuation">(</span>i <span class="hljs-operator">&lt;</span> j<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        p <span class="hljs-operator">&lt;-</span> ggplot<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> theme_nothing<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">&#125;</span><br>      Pall<span class="hljs-punctuation">[</span>index<span class="hljs-punctuation">]</span><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> p<br>      index <span class="hljs-operator">=</span> index <span class="hljs-operator">+</span> <span class="hljs-number">1</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br>  lay <span class="hljs-operator">&lt;-</span> lay_new<span class="hljs-punctuation">(</span>mat <span class="hljs-operator">=</span> matrix<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span>n<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> nrow <span class="hljs-operator">=</span> n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> widths <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> heights <span class="hljs-operator">=</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> n<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  lay_grid<span class="hljs-punctuation">(</span>Pall<span class="hljs-punctuation">,</span> lay<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-comment"># 导入数据并绘图</span><br>data <span class="hljs-operator">&lt;-</span> read.table<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;./data.txt&quot;</span><span class="hljs-punctuation">,</span> header <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">,</span> row.names <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> sep <span class="hljs-operator">=</span> <span class="hljs-string">&quot;\t&quot;</span><span class="hljs-punctuation">)</span><br>png<span class="hljs-punctuation">(</span>filename <span class="hljs-operator">=</span> <span class="hljs-string">&quot;test.png&quot;</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">8</span><span class="hljs-punctuation">,</span> units <span class="hljs-operator">=</span> <span class="hljs-string">&quot;in&quot;</span><span class="hljs-punctuation">,</span> res <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br>pheCorDist<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>技术分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>绘图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nat Commun. | 醋栗番茄基因组为研究番茄育种过程中的结构变异提供了依据</title>
    <link href="/2023/03/21/20230321-SolanumPimpinellifoliumGenome/"/>
    <url>/2023/03/21/20230321-SolanumPimpinellifoliumGenome/</url>
    
    <content type="html"><![CDATA[<p>醋栗番茄（<em>Solanum lycopersicum</em>, SP）是栽培番茄（<em>S. lycopersicum</em>）的野生祖先种，他的果实小、颜色红呈现圆形。醋栗番茄在南美洲被驯化形成了观赏番茄（<em>S. lycopersicum</em> var. <em>cerasiforme</em>, SLC），随后在中美洲被改良成现在可食用的大果型栽培番茄（<em>S. lycopersicum</em> var. <em>lycopersicum</em>, SLL）。醋栗番茄和栽培番茄之间可以自由杂交，因此醋栗番茄可以为栽培番茄的抗性、品质性状改良提供基因资源。高质量的醋栗番茄参考基因组将为两者之间基因组变异鉴定、重要的驯化相关基因挖掘以及栽培番茄育种改良提供帮助。</p><p><img src="/2023/03/21/20230321-SolanumPimpinellifoliumGenome/domestication.png" alt="从醋栗番茄到栽培番茄" title="从醋栗番茄到栽培番茄 (Lin et al. Nature Genetics, 2014)"></p><h2 id="一个高质量的醋栗番茄基因组以及野生番茄、栽培番茄之间广泛的结构变异"><a href="#一个高质量的醋栗番茄基因组以及野生番茄、栽培番茄之间广泛的结构变异" class="headerlink" title="一个高质量的醋栗番茄基因组以及野生番茄、栽培番茄之间广泛的结构变异"></a>一个高质量的醋栗番茄基因组以及野生番茄、栽培番茄之间广泛的结构变异</h2><p>作者结合PacBio长读长测序、Hi-C染色质互作信息、与栽培番茄基因组间共线性信息以及遗传连锁图组装了一个高质量的醋栗番茄LA2093的参考基因组，并通过与遗传图共线性分析、BUSCO分析等验证了组装结果的可靠性。基因组结构变异（structural variants, SVs）包括插入缺失、倒位、重复等，对作物驯化有重要的影响，因此作者通过基因组间比较鉴定了LA2093和现代栽培番茄Heinz 1706间的结构变异，并且发现<em>gypsy</em>-like的逆转录转座子区域有更高的indels发生频率，而只有14.8% indels发生在基因区或启动子区，但这些indels足以和一半以上的基因重叠，富集分析表明这些indels可能和野生番茄、栽培番茄之间的抗病性以及品质性状相关。</p><p><img src="/2023/03/21/20230321-SolanumPimpinellifoliumGenome/genome.png" alt="醋栗番茄基因组及结构变异" title="醋栗番茄基因组及结构变异"></p><h2 id="番茄驯化和育种过程中对SVs的选择以及对农艺性状的影响"><a href="#番茄驯化和育种过程中对SVs的选择以及对农艺性状的影响" class="headerlink" title="番茄驯化和育种过程中对SVs的选择以及对农艺性状的影响"></a>番茄驯化和育种过程中对SVs的选择以及对农艺性状的影响</h2><p>利用重测序信息，作者鉴定了597份野生和栽培番茄（51份SP, 6份S. cheesmaniae和S. galapagense (SCG), 228份SLC, 226份heirloom, 52份现代栽培种和34份其他栽培种）在这些SVs位点的基因型。通过比较不同群体种SV基因型频率发现，驯化和改良改变了SV基因型的分布，LA2093类型的纯合SV在野生番茄中广泛存在，而Heinz 1706类型的纯合SVs在栽培番茄中逐渐固定下来。这些收到驯化、改良选择的SVs影响到胁迫和刺激相应、生物合成、细胞分化、胚发育、授粉和生殖过程相关的基因。随后作者研究了影响果实大小、番茄红素含量和成熟相关基因SV的不同等位基因频率在不同群体中的动态变化以及不同基因型的表达量差异，证实了SV在番茄驯化改良过程中的重要作用。对这些SV的研究为将来育种改良番茄的品质、抗性的提供新的目标基因。</p><p><img src="/2023/03/21/20230321-SolanumPimpinellifoliumGenome/selection1.png" alt="驯化改良对SV基因型频率的影响" title="驯化改良对SV基因型频率的影响"></p><p><img src="/2023/03/21/20230321-SolanumPimpinellifoliumGenome/selection2.png" alt="果实大小基因的SV频率和表达量变化" title="果实大小基因的SV频率和表达量变化"></p><h2 id="全基因组eQTL鉴定"><a href="#全基因组eQTL鉴定" class="headerlink" title="全基因组eQTL鉴定"></a>全基因组eQTL鉴定</h2><p>利用已发表的番茄果实转录组数据，作者鉴定到10,789个eQTL影响了5595个基因的表达，其中cis-eQTL和trans-eQTL相比可以解释更多的表达量变异。作者进一步鉴定了48个eQTL热点区域，这些热点区域调控了554个基因的表达。</p><p><img src="/2023/03/21/20230321-SolanumPimpinellifoliumGenome/eQTL.png" alt="eQTL" title="eQTL"></p><hr><p><strong>原文链接</strong></p><p><a href="https://www.nature.com/articles/s41467-020-19682-0">Wang X, Gao L, Jiao C, et al. Genome of Solanum pimpinellifolium provides insights into structural variants during tomato breeding. Nat Commun. 2020;11(1):5817. Published 2020 Nov 16. doi:10.1038/s41467-020-19682-0</a></p>]]></content>
    
    
    <categories>
      
      <category>文献解读</category>
      
    </categories>
    
    
    <tags>
      
      <tag>基因组</tag>
      
      <tag>eQTL</tag>
      
      <tag>驯化</tag>
      
      <tag>番茄</tag>
      
      <tag>结构变异</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2023/03/13/20230313-firstArticle/"/>
    <url>/2023/03/13/20230313-firstArticle/</url>
    
    <content type="html"><![CDATA[<h2 id="我搭建了一个博客网站"><a href="#我搭建了一个博客网站" class="headerlink" title="我搭建了一个博客网站"></a>我搭建了一个博客网站</h2><p>如题所说这是这个网站上的第一篇博客，以后会在这里分享一些学习、生活相关的文章。为什么会搭建一个网站来写博客呢？相较于简书、知乎、微信公众号等平台，个人网站有更高的灵活性，版面设计更加丰富；相比于微博、小红书等社交平台，个人网站内容更加纯粹，广告更少，字数等限制也更少；还有一点就是搭建个网站看起来很厉害。</p><h2 id="网站内容"><a href="#网站内容" class="headerlink" title="网站内容"></a>网站内容</h2><p>以后大概会分享以下几个方面的文章：</p><ul><li>日常生活</li><li>文献解读</li><li>编程技术</li><li>软件工具</li><li>… …</li></ul><h2 id="技术框架"><a href="#技术框架" class="headerlink" title="技术框架"></a>技术框架</h2><p>前面提到搭建网站看起来很厉害，其实真正操作起来并不难。就像做一个PPT可以用Microsoft PowerPoint，甚至还有很多好看的模板可以下载使用，做博客网站也有很多成熟的框架和主题可以使用。这个网站是使用<a href="https://hexo.io/zh-cn/index.html">Hexo</a>搭建，选用<a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a>主题，使用markdown语法来写文章。以上步骤完成后把网站部署在<a href="https://github.com/">GitHub</a>上就可以供大家访问了。最后在阿里云上购买了一个域名（可选），最终做成一个现在大家看到的网站了。以后可以写一篇博客详细讲一讲搭建这个网站的过程。</p><p><img src="/2023/03/13/20230313-firstArticle/LaowangAndHuining_20230313210505.png" alt="老王和惠宁" title="老王和女朋友在公园划船"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
